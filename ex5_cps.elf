%%----------------------------

tp : type.

num : tp.
arr : tp -> tp -> tp.

%%----------------------------

exp : type.

z : exp.
s : exp -> exp.
ifz : exp -> exp -> (exp -> exp) -> exp]
fun : tp -> (exp -> exp) -> exp.
app : exp -> exp -> exp.

%%-----------------------------
%% Informal CPS transformation
%%-----------------------------

% [ x ] k = k x
% [ t s ] k = [ t ] ( f -> [ s ] ( a -> f a k))
% [ \x. t ] k = k (\x -> [t] (\x -> x))
% [ z ] k = k z
% [ s t ] k = [ t ] (\n -> k (s n))
% [ ifz e1 e2 e3 ] k = [ e1 ] ( \n -> ifz n ([e2] k) ([e3] k) )
